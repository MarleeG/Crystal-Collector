{"ast":null,"code":"import _classCallCheck from \"/Users/ChristinaGerard/Desktop/personal_projects/Crystal-Collector/crystal_collector/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ChristinaGerard/Desktop/personal_projects/Crystal-Collector/crystal_collector/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ChristinaGerard/Desktop/personal_projects/Crystal-Collector/crystal_collector/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ChristinaGerard/Desktop/personal_projects/Crystal-Collector/crystal_collector/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ChristinaGerard/Desktop/personal_projects/Crystal-Collector/crystal_collector/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/ChristinaGerard/Desktop/personal_projects/Crystal-Collector/crystal_collector/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/ChristinaGerard/Desktop/personal_projects/Crystal-Collector/crystal_collector/src/App.js\";\nimport React, { Component } from 'react';\nimport { ListGroup, ListGroupItem } from 'react-bootstrap';\nimport Header from './components/header';\nimport Crystals from './components/crystals';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.generateRandomNumber = _this.generateRandomNumber.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.generateCrystalValues = _this.generateCrystalValues.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addCrystalValue = _this.addCrystalValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.checkingScore = _this.checkingScore.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.newCrystalValues = _this.newCrystalValues.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      randomNumber: 0,\n      crystals: [{\n        crystal: 'Gold',\n        value: _this.generateCrystalValues()\n      }, {\n        crystal: 'Blue',\n        value: _this.generateCrystalValues()\n      }, {\n        crystal: 'Black',\n        value: _this.generateCrystalValues()\n      }, {\n        crystal: 'Green',\n        value: _this.generateCrystalValues()\n      }],\n      userTotal: 0,\n      wins: 0,\n      losses: 0\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        randomNumber: this.generateRandomNumber()\n      });\n    }\n  }, {\n    key: \"generateRandomNumber\",\n    value: function generateRandomNumber() {\n      return Math.floor(Math.random() * 102) + 19;\n    }\n  }, {\n    key: \"generateCrystalValues\",\n    value: function generateCrystalValues() {\n      return Math.floor(Math.random() * 12) + 1;\n    }\n  }, {\n    key: \"newCrystalValues\",\n    value: function newCrystalValues() {\n      var _this2 = this;\n\n      var crystals = this.state.crystals;\n      crystals.map(function (element) {\n        element.value = _this2.generateCrystalValues();\n      });\n    }\n  }, {\n    key: \"addCrystalValue\",\n    value: function addCrystalValue(crystal, value) {\n      var _this3 = this;\n\n      console.log(\"crystal: \".concat(crystal, \" || value: \").concat(value));\n      this.setState({\n        userTotal: this.state.userTotal + value\n      }, function () {\n        return _this3.checkingScore();\n      });\n    }\n  }, {\n    key: \"checkingScore\",\n    value: function checkingScore() {\n      if (this.state.randomNumber === this.state.userTotal) {\n        this.setState({\n          wins: this.state.wins + 1,\n          userTotal: 0\n        });\n        this.generateRandomNumber();\n        this.newCrystalValues();\n      } else if (this.state.randomNumber < this.state.userTotal) {\n        this.setState({\n          losses: this.state.losses + 1,\n          userTotal: 0\n        });\n        this.generateRandomNumber();\n        this.newCrystalValues();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(ListGroupItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Random Number: \", this.state.randomNumber))), React.createElement(ListGroupItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Wins: \", this.state.wins)), React.createElement(ListGroupItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \" \", React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Losses: \", this.state.losses)), React.createElement(ListGroupItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Total: \", this.state.userTotal))), React.createElement(Crystals, {\n        addCrystalValue: function addCrystalValue(crystal, value) {\n          return _this4.addCrystalValue(crystal, value);\n        },\n        crystals: this.state.crystals,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/ChristinaGerard/Desktop/personal_projects/Crystal-Collector/crystal_collector/src/App.js"],"names":["React","Component","ListGroup","ListGroupItem","Header","Crystals","App","props","generateRandomNumber","bind","generateCrystalValues","addCrystalValue","checkingScore","newCrystalValues","state","randomNumber","crystals","crystal","value","userTotal","wins","losses","setState","Math","floor","random","map","element","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,iBAAzC;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AACA,UAAKC,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BC,IAA1B,uDAA5B;AACA,UAAKC,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BD,IAA3B,uDAA7B;AACA,UAAKE,eAAL,GAAuB,MAAKA,eAAL,CAAqBF,IAArB,uDAAvB;AACA,UAAKG,aAAL,GAAqB,MAAKA,aAAL,CAAmBH,IAAnB,uDAArB;AACA,UAAKI,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBJ,IAAtB,uDAAxB;AAGA,UAAKK,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,CADH;AAEXC,MAAAA,QAAQ,EAAE,CACR;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,KAAK,EAAE,MAAKR,qBAAL;AAA1B,OADQ,EAER;AAAEO,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,KAAK,EAAE,MAAKR,qBAAL;AAA1B,OAFQ,EAGR;AAAEO,QAAAA,OAAO,EAAE,OAAX;AAAoBC,QAAAA,KAAK,EAAE,MAAKR,qBAAL;AAA3B,OAHQ,EAIR;AAAEO,QAAAA,OAAO,EAAE,OAAX;AAAoBC,QAAAA,KAAK,EAAE,MAAKR,qBAAL;AAA3B,OAJQ,CAFC;AAQXS,MAAAA,SAAS,EAAE,CARA;AASXC,MAAAA,IAAI,EAAE,CATK;AAUXC,MAAAA,MAAM,EAAE;AAVG,KAAb;AATiB;AAqBlB;;;;wCAEmB;AAClB,WAAKC,QAAL,CAAc;AACZP,QAAAA,YAAY,EAAE,KAAKP,oBAAL;AADF,OAAd;AAGD;;;2CAEsB;AACrB,aAAOe,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,IAAkC,EAAzC;AACD;;;4CAEuB;AACtB,aAAOF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAAxC;AACD;;;uCAEkB;AAAA;;AACjB,UAAIT,QAAQ,GAAG,KAAKF,KAAL,CAAWE,QAA1B;AAEAA,MAAAA,QAAQ,CAACU,GAAT,CAAa,UAAAC,OAAO,EAAI;AACtBA,QAAAA,OAAO,CAACT,KAAR,GAAgB,MAAI,CAACR,qBAAL,EAAhB;AACD,OAFD;AAGD;;;oCAEeO,O,EAASC,K,EAAO;AAAA;;AAC9BU,MAAAA,OAAO,CAACC,GAAR,oBAAwBZ,OAAxB,wBAA6CC,KAA7C;AACA,WAAKI,QAAL,CAAc;AACZH,QAAAA,SAAS,EAAE,KAAKL,KAAL,CAAWK,SAAX,GAAuBD;AADtB,OAAd,EAEG;AAAA,eAAM,MAAI,CAACN,aAAL,EAAN;AAAA,OAFH;AAGD;;;oCAEe;AACd,UAAI,KAAKE,KAAL,CAAWC,YAAX,KAA4B,KAAKD,KAAL,CAAWK,SAA3C,EAAsD;AACpD,aAAKG,QAAL,CAAc;AACZF,UAAAA,IAAI,EAAE,KAAKN,KAAL,CAAWM,IAAX,GAAkB,CADZ;AAEZD,UAAAA,SAAS,EAAE;AAFC,SAAd;AAIA,aAAKX,oBAAL;AACA,aAAKK,gBAAL;AACD,OAPD,MAOO,IAAI,KAAKC,KAAL,CAAWC,YAAX,GAA0B,KAAKD,KAAL,CAAWK,SAAzC,EAAoD;AACzD,aAAKG,QAAL,CAAc;AACZD,UAAAA,MAAM,EAAE,KAAKP,KAAL,CAAWO,MAAX,GAAoB,CADhB;AAEZF,UAAAA,SAAS,EAAE;AAFC,SAAd;AAIA,aAAKX,oBAAL;AACA,aAAKK,gBAAL;AACD;AACF;;;6BAEQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACkB,KAAKC,KAAL,CAAWC,YAD7B,CADF,CADF,CADF,EAQE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAW,KAAKD,KAAL,CAAWM,IAAtB,CADF,CARF,EAWE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAa,KAAKN,KAAL,CAAWO,MAAxB,CAAhB,CAXF,EAYE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACU,KAAKP,KAAL,CAAWK,SADrB,CADF,CAZF,CALF,EAwBE,oBAAC,QAAD;AAAU,QAAA,eAAe,EAAE,yBAACF,OAAD,EAAUC,KAAV;AAAA,iBAAoB,MAAI,CAACP,eAAL,CAAqBM,OAArB,EAA8BC,KAA9B,CAApB;AAAA,SAA3B;AAAqF,QAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWE,QAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAxBF,CADF;AA6BD;;;;EArGef,S;;AAwGlB,eAAeK,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { ListGroup, ListGroupItem } from 'react-bootstrap'\n\nimport Header from './components/header';\nimport Crystals from './components/crystals'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.generateRandomNumber = this.generateRandomNumber.bind(this);\n    this.generateCrystalValues = this.generateCrystalValues.bind(this);\n    this.addCrystalValue = this.addCrystalValue.bind(this);\n    this.checkingScore = this.checkingScore.bind(this);\n    this.newCrystalValues = this.newCrystalValues.bind(this);\n\n\n    this.state = {\n      randomNumber: 0,\n      crystals: [\n        { crystal: 'Gold', value: this.generateCrystalValues() },\n        { crystal: 'Blue', value: this.generateCrystalValues() },\n        { crystal: 'Black', value: this.generateCrystalValues() },\n        { crystal: 'Green', value: this.generateCrystalValues() }\n      ],\n      userTotal: 0,\n      wins: 0,\n      losses: 0\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      randomNumber: this.generateRandomNumber()\n    })\n  }\n\n  generateRandomNumber() {\n    return Math.floor(Math.random() * 102) + 19\n  }\n\n  generateCrystalValues() {\n    return Math.floor(Math.random() * 12) + 1\n  }\n\n  newCrystalValues() {\n    var crystals = this.state.crystals\n\n    crystals.map(element => {\n      element.value = this.generateCrystalValues()\n    })\n  }\n\n  addCrystalValue(crystal, value) {\n    console.log(`crystal: ${crystal} || value: ${value}`)\n    this.setState({\n      userTotal: this.state.userTotal + value\n    }, () => this.checkingScore())\n  }\n\n  checkingScore() {\n    if (this.state.randomNumber === this.state.userTotal) {\n      this.setState({\n        wins: this.state.wins + 1,\n        userTotal: 0\n      })\n      this.generateRandomNumber();\n      this.newCrystalValues();\n    } else if (this.state.randomNumber < this.state.userTotal) {\n      this.setState({\n        losses: this.state.losses + 1,\n        userTotal: 0\n      })\n      this.generateRandomNumber();\n      this.newCrystalValues();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n\n        <Header />\n\n\n        <ListGroup>\n          <ListGroupItem>\n            <div>\n              <h4>\n                Random Number: {this.state.randomNumber}\n              </h4>\n            </div>\n          </ListGroupItem>\n          <ListGroupItem>\n            <h4>Wins: {this.state.wins}</h4>\n          </ListGroupItem>\n          <ListGroupItem> <h4>Losses: {this.state.losses}</h4></ListGroupItem>\n          <ListGroupItem>\n            <h4>\n              Total: {this.state.userTotal}\n            </h4>\n          </ListGroupItem>\n\n        </ListGroup>\n        <Crystals addCrystalValue={(crystal, value) => this.addCrystalValue(crystal, value)} crystals={this.state.crystals} />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}